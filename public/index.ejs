<!DOCTYPE html>

<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
	<title>English</title>
	<script src="//code.jquery.com/jquery-2.0.3.min.js"></script>
	<style type='text/css'>
		ul { list-style: none; }
		#recordingslist audio { display: block; margin-bottom: 10px; }
	</style>
</head>
<body>
	<h3>出題</h3>
	<ul id="englishtext">This is a pen.</ul>
	
	<button onclick="startRecording(this);">発音</button>
	<button onclick="stopRecording(this);" disabled>停止</button>
	
	<h3>認識結果</h3>
	<ul id="recognizedresult"></ul>
	
	<h3>模範</h3>
	<ul id="englishspeech"></ul>
	
	<button onclick="speechExamplification(this);">模範</button>

	<h3>Status</h3>
	<pre id="log"></pre>

	<script>
	function __log(e, data) {
		log.innerHTML += e + " " + (data || '') + '\n';
	}

	var audio_context;
	var recorder;

	function startUserMedia(stream){
		var input = audio_context.createMediaStreamSource(stream);
		__log('Media stream created.');
		
		recorder = new Recorder(input);
		__log('Recorder initialised.');
	}

	function startRecording(button){
		recorder && recorder.record();
		button.disabled = true;
		button.nextElementSibling.disabled = false;
		__log('Recording...');
	}

	function stopRecording(button){
		recorder && recorder.stop();
		button.disabled = true;
		button.previousElementSibling.disabled = false;
		__log('Stopped recording.');
		
		sendRecordData();
		recorder.clear();
	}

	function sendRecordData(){
		recorder && recorder.exportWAV(function(blob) {
			var fd = new FormData();
			fd.append( 'data', blob );
			$.ajax({
				type: 'POST',
				url: './s2t',
				data: fd,
				processData: false,
				contentType: false,
			}).done( function( result ){
                var data = JSON.parse( result );
				console.log( data.result );
                $('#recognizedresult').html( data.result );

/*
			var url = URL.createObjectURL(blob);
			var li = document.createElement('li');
			var au = document.createElement('audio');
			var hf = document.createElement('a');
			
			au.controls = true;
			au.src = url;
			hf.href = url;
			hf.download = new Date().toISOString() + '.wav';
			hf.innerHTML = hf.download;
			li.appendChild(au);
			li.appendChild(hf);
			englishspeech.appendChild(li);
*/
			});
		});
	}

    function speechExamplification( button ){
      var englishtext = $('#englishtext').html();
      $.ajax({
        type: 'POST',
        url: './t2s',
        //processData: false,
        //contentType: false,
        data: { text: englishtext }
      }).done( function( result ){
        console.log( result );
      });
    }

	window.onload = function init(){
		try{
			window.AudioContext = window.AudioContext || window.webkitAudioContext;
			navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia;
			window.URL = window.URL || window.webkitURL;
			
			audio_context = new AudioContext;
			__log('Audio context set up.');
			__log('navigator.getUserMedia ' + (navigator.getUserMedia ? 'available.' : 'not present!'));
		}
		catch (e){
			alert('No web audio support in this browser!');
		}
		
		navigator.getUserMedia({audio: true}, startUserMedia, function(e) {
			__log('No live audio input: ' + e);
		});
	};
	</script>

	<script src="./recorder.js"></script>
</body>
</html>

